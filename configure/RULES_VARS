RULES_VARS+=$(foreach v, $(filter %_RULES,$(.VARIABLES)), $(v))
RULES_VARS+=$(foreach v, $(filter %_RULES_NAMES,$(.VARIABLES)), $(v))

VARS_EXCLUDES+=.SHELLSTATUS
VARS_EXCLUDES+=INIT_SRC
VARS_EXCLUDES+=FILTER
VARS_EXCLUDES+=LEVEL
VARS_EXCLUDES+=$(filter %_VARS, $(.VARIABLES))
VARS_EXCLUDES+=$(filter JAR_%, $(.VARIABLES))
VARS_EXCLUDES+=$(filter %_BUILDER, $(.VARIABLES))
VARS_EXCLUDES+=$(RULES_VARS)
VARS_EXCLUDES+=RULES_VARS
VARS_EXCLUDES+=%_BUILDER
VARS_EXCLUDES+=LSOPTS
VARS_EXCLUDES+=UNAME_%
VARS_EXCLUDES+=install
VARS_EXCLUDES+=clean
VARS_EXCLUDES+=echo
VARS_EXCLUDES+=$(filter -%, $(.VARIABLES))
VARS_EXCLUDES+=$(filter "%, $(.VARIABLES))
VARS_EXCLUDES+=$(filter @%, $(.VARIABLES))
VARS_EXCLUDES+=LSOPTS


LEVEL?=1
FILTER?=1
LSOPTS?="-lta"

ifeq "$(FILTER)" "1"
SRC_VARIABLES:=$(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES)))
else
SRC_VARIABLES:=$(filter $(FILTER)%, $(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES))))
endif

.PHONY : env vars header

env: vars
## Print interesting VARIABLES : also make PRINT.$(EACH_VARIABLE)
vars: _header
	$(foreach v, $(SRC_VARIABLES), $(info $(v) = $($(v)))) @#noop

_header:
	$(QUIET)echo ""
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ">>>>          Current Environment Variables             <<<<"
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ""

# https://www.cmcrossroads.com/article/printing-value-makefile-variable
PRINT.%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

print-%:
	$(QUIET)echo $($*)

ls.%:
	$(QUIET) ls $(LSOPTS) $($*)

tree.%:
	$(QUIET) tree -aL $(LEVEL) $($*)

FORCE:

.PHONY : exist

exist:
ifeq (, $(shell which tree))
	$(if $(wildcard $(INSTALL_LOCATION_MODS)), @ ls -d $(INSTALL_LOCATION_MODS) && find $(INSTALL_LOCATION_MODS)/ -maxdepth $(LEVEL) | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/:---\1/")
else
	$(if $(wildcard $(INSTALL_LOCATION_MODS)), tree -aL $(LEVEL) $(INSTALL_LOCATION_MODS), $(QUIET)echo "No $(INSTALL_LOCATION_MODS)")
endif


.DELETE_ON_ERROR:

.NOTPARALLEL:

